<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Search on Bart de Goede</title><link>https://bart.degoe.de/categories/search/</link><description>Recent content in Search on Bart de Goede</description><image><title>Bart de Goede</title><url>https://www.gravatar.com/avatar/af61db828941976309aaa8d7d76554fb</url><link>https://www.gravatar.com/avatar/af61db828941976309aaa8d7d76554fb</link></image><generator>Hugo -- 0.147.8</generator><language>en-us</language><lastBuildDate>Wed, 24 Mar 2021 20:00:12 -0700</lastBuildDate><atom:link href="https://bart.degoe.de/categories/search/index.xml" rel="self" type="application/rss+xml"/><item><title>Building a full-text search engine in 150 lines of Python code</title><link>https://bart.degoe.de/building-a-full-text-search-engine-150-lines-of-code/</link><pubDate>Wed, 24 Mar 2021 20:00:12 -0700</pubDate><guid>https://bart.degoe.de/building-a-full-text-search-engine-150-lines-of-code/</guid><description>Full-text search is everywhere. From finding a book on Scribd, a movie on Netflix, toilet paper on Amazon, or anything else on the web through Google (like [how to do your job as a software engineer](https://localghost.dev/2019/09/everything-i-googled-in-a-week-as-a-professional-software-engineer/)), you&amp;#39;ve searched vast amounts of unstructured data multiple times today. What&amp;#39;s even more amazing, is that you&amp;#39;ve even though you searched millions (or [billions](https://www.worldwidewebsize.com/)) of records, you got a response in milliseconds. In this post, we are going to build a basic full-text search engine that can search across millions of documents and rank them according to their relevance to the query in milliseconds, in less than 150 lines of code!</description></item><item><title>Use Hugo Output Formats to generate Lunr index files for your static site search</title><link>https://bart.degoe.de/use-hugo-output-formats-to-generate-lunr-index-files/</link><pubDate>Fri, 12 Jul 2019 15:27:40 -0700</pubDate><guid>https://bart.degoe.de/use-hugo-output-formats-to-generate-lunr-index-files/</guid><description>I&amp;#39;ve been using Lunr.js to enable some basic site search on this blog. Lunr.js requires an index file that contains all the content you want to make available for search. In order to generate that file, I had a kind of hacky setup, depending on running a Grunt script on every deploy, which introduces a dependency on node, and nobody really wants any of that for just a static HTML website.</description></item><item><title>Custom OpenSearch: search from your URL bar</title><link>https://bart.degoe.de/tab-plus-search-from-your-url-bar-with-opensearch/</link><pubDate>Wed, 21 Nov 2018 11:00:00 -0800</pubDate><guid>https://bart.degoe.de/tab-plus-search-from-your-url-bar-with-opensearch/</guid><description>&lt;p>Almost all modern browsers enable websites to customize the built-in search feature to let the user access their search features directly, without going to your website first and finding the search input box. If your website has search functionality accessible through a basic GET request, it&amp;rsquo;s surprisingly simple to enable this for your website too.&lt;/p></description></item><item><title>Searching your Hugo site with Lunr</title><link>https://bart.degoe.de/searching-your-hugo-site-with-lunr/</link><pubDate>Sun, 04 Mar 2018 23:38:44 +0100</pubDate><guid>https://bart.degoe.de/searching-your-hugo-site-with-lunr/</guid><description>&lt;p>Like many software engineers, I figured I needed a blog of sorts, because it would give me a place for my own notes on &amp;ldquo;How To Do Thingsâ„¢&amp;rdquo;, let me have a URL to give people, and share my ramblings about Life, the Universe and Everything Else with whoever wants to read them.&lt;/p></description></item></channel></rss>